name: Build and Deploy Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Step 3: Install Python dependencies
    - name: Install Python Dependencies
      run: pip install pyinstaller

    # Step 4: Build the application with PyInstaller
    - name: Build Application with PyInstaller
      run: pyinstaller --onefile app.py

    # Step 5: Install Advanced Installer
    - name: Install Advanced Installer
      run: choco install advanced-installer --version=22.3 -y

    # Step 6: Define environment variables
    - name: Define Variables
      run: |
        echo "APP_NAME=${{ github.repository }}" >> $GITHUB_ENV
        echo "OUTPUT_DIR=C:\\Users\\${{ github.actor }}\\Desktop\\${{ github.repository }}\\dist" >> $GITHUB_ENV
        echo "AIP_FILE=C:\\Users\\${{ github.actor }}\\Desktop\\${{ github.repository }}\\dist\\${{ github.repository }}.aip" >> $GITHUB_ENV
        if not exist "%OUTPUT_DIR%" mkdir "%OUTPUT_DIR%"

    # Step 7: Create a new AIP project
    - name: Create New AIP Project
      run: |
        "C:\Program Files (x86)\Caphyon\Advanced Installer 22.3\bin\x86\AdvancedInstaller.com" /newproject "%AIP_FILE%" -type exe -overwrite
      env:
        AIP_FILE: ${{ env.AIP_FILE }}

    # Step 8: Configure and build the installer
    - name: Configure and Build the Installer
      run: |
        "C:\Program Files (x86)\Caphyon\Advanced Installer 22.3\bin\x86\AdvancedInstaller.com" /edit "%AIP_FILE%" /SetPackageName "${{ env.APP_NAME }}.exe"
        "C:\Program Files (x86)\Caphyon\Advanced Installer 22.3\bin\x86\AdvancedInstaller.com" /edit "%AIP_FILE%" /SetOutputPath "${{ env.OUTPUT_DIR }}"
        "C:\Program Files (x86)\Caphyon\Advanced Installer 22.3\bin\x86\AdvancedInstaller.com" /build "%AIP_FILE%"
      env:
        APP_NAME: ${{ env.APP_NAME }}
        OUTPUT_DIR: ${{ env.OUTPUT_DIR }}
        AIP_FILE: ${{ env.AIP_FILE }}

    # Step 9: Upload the installer to GitHub artifacts
    - name: Upload Installer to Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Installer
        path: "${{ env.OUTPUT_DIR }}\\*"
